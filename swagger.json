{
  "swagger": "2.0",
  "info": {
    "title": "API PDV - Sistema de Ponto de Venda",
    "description": "# Documentação da API PDV (Ponto de Venda)\n\nEsta API fornece endpoints para gerenciamento completo de um sistema de Ponto de Venda,\nincluindo administração de usuários, produtos, clientes, pedidos e categorias.\n\n## Autenticação\n\nA maioria dos endpoints requer autenticação usando um token JWT.\nPara obter um token, faça uma requisição para o endpoint `/login`.\n\nPara endpoints protegidos, inclua o token no cabeçalho da requisição:\n```\nAuthorization: Bearer seu_token_aqui\n```\n\n## Padrões de Resposta\n\n* **200 (OK)** - Requisição bem sucedida\n* **201 (Created)** - Recurso criado com sucesso\n* **400 (Bad Request)** - Dados inválidos ou campos faltando\n* **401 (Unauthorized)** - Token ausente ou inválido\n* **404 (Not Found)** - Recurso não encontrado\n* **500 (Internal Server Error)** - Erro no servidor\n\n## Formatos\n\n* Valores monetários são representados em centavos (ex: R$ 10,90 = 1090)\n* Datas são representadas no formato ISO 8601\n* CPF pode ser formatado (123.456.789-00) ou não (12345678900)",
    "version": "1.0.0",
    "contact": {
      "name": "Marco Pezzote",
      "url": "https://github.com/marcopezzote",
      "email": "marco@exemplo.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Insira o token JWT precedido de \"Bearer \" (ex: Bearer seu_token_aqui)"
    }
  },
  "tags": [
    {
      "name": "Autenticação",
      "description": "Endpoints para autenticação e gerenciamento de usuários"
    },
    {
      "name": "Produtos",
      "description": "Endpoints para gerenciamento de produtos"
    },
    {
      "name": "Clientes",
      "description": "Endpoints para gerenciamento de clientes"
    },
    {
      "name": "Pedidos",
      "description": "Endpoints para gerenciamento de pedidos"
    },
    {
      "name": "Categorias",
      "description": "Endpoints para gerenciamento de categorias"
    },
    {
      "name": "Sistema",
      "description": "Endpoints para monitoramento e diagnóstico do sistema"
    }
  ],
  "paths": {
    "/usuario": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Cadastrar novo usuário",
        "description": "Cria um novo usuário no sistema.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "schema": {
              "$ref": "#/definitions/UsuarioResponse"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": ["Autenticação"],
        "summary": "Obter dados do usuário logado",
        "description": "Retorna os dados do usuário autenticado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do usuário",
            "schema": {
              "$ref": "#/definitions/UsuarioResponse"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Autenticação"],
        "summary": "Atualizar dados do usuário",
        "description": "Atualiza os dados do usuário autenticado.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsuarioUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/UsuarioResponse"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Realizar login",
        "description": "Autentica o usuário e retorna um token JWT.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login bem sucedido",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Email ou senha inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/produto": {
      "get": {
        "tags": ["Produtos"],
        "summary": "Listar produtos",
        "description": "Retorna todos os produtos cadastrados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoria_id",
            "in": "query",
            "description": "Filtrar por categoria",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Produto"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Produtos"],
        "summary": "Cadastrar produto",
        "description": "Cria um novo produto com imagem.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "descricao",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Nome/descrição do produto"
          },
          {
            "name": "quantidade_estoque",
            "in": "formData",
            "required": true,
            "type": "integer",
            "description": "Quantidade em estoque"
          },
          {
            "name": "valor",
            "in": "formData",
            "required": true,
            "type": "integer",
            "description": "Valor em centavos (ex: 1990 para R$ 19,90)"
          },
          {
            "name": "categoria_id",
            "in": "formData",
            "required": true,
            "type": "integer",
            "description": "ID da categoria"
          },
          {
            "name": "produto_imagem",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "Imagem do produto"
          }
        ],
        "responses": {
          "201": {
            "description": "Produto criado com sucesso",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "400": {
            "description": "Dados inválidos ou imagem não enviada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/produto/{id}": {
      "get": {
        "tags": ["Produtos"],
        "summary": "Detalhes do produto",
        "description": "Retorna os detalhes de um produto específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do produto"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do produto",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Produto não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Produtos"],
        "summary": "Atualizar produto",
        "description": "Atualiza os dados de um produto específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do produto"
          },
          {
            "name": "descricao",
            "in": "formData",
            "type": "string",
            "description": "Nome/descrição do produto"
          },
          {
            "name": "quantidade_estoque",
            "in": "formData",
            "type": "integer",
            "description": "Quantidade em estoque"
          },
          {
            "name": "valor",
            "in": "formData",
            "type": "integer",
            "description": "Valor em centavos (ex: 1990 para R$ 19,90)"
          },
          {
            "name": "categoria_id",
            "in": "formData",
            "type": "integer",
            "description": "ID da categoria"
          },
          {
            "name": "produto_imagem",
            "in": "formData",
            "type": "file",
            "description": "Nova imagem do produto"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Produto não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Produtos"],
        "summary": "Excluir produto",
        "description": "Remove um produto específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do produto"
          }
        ],
        "responses": {
          "204": {
            "description": "Produto excluído com sucesso"
          },
          "400": {
            "description": "Produto não pode ser excluído",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Produto não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cliente": {
      "get": {
        "tags": ["Clientes"],
        "summary": "Listar clientes",
        "description": "Retorna todos os clientes cadastrados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cliente"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Clientes"],
        "summary": "Cadastrar cliente",
        "description": "Cria um novo cliente.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente criado com sucesso",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "CPF ou email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cliente/{id}": {
      "get": {
        "tags": ["Clientes"],
        "summary": "Detalhes do cliente",
        "description": "Retorna os detalhes de um cliente específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do cliente"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do cliente",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Clientes"],
        "summary": "Atualizar cliente",
        "description": "Atualiza os dados de um cliente específico.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do cliente"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClienteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "Dados inválidos",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "CPF ou email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pedido": {
      "get": {
        "tags": ["Pedidos"],
        "summary": "Listar pedidos",
        "description": "Retorna todos os pedidos cadastrados.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "cliente_id",
            "in": "query",
            "description": "Filtrar por cliente",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pedidos",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pedido"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Pedidos"],
        "summary": "Cadastrar pedido",
        "description": "Cria um novo pedido.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Pedido criado com sucesso",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "Dados inválidos ou estoque insuficiente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cliente ou produto não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/categoria": {
      "get": {
        "tags": ["Categorias"],
        "summary": "Listar categorias",
        "description": "Retorna todas as categorias cadastradas.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de categorias",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Categoria"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["Sistema"],
        "summary": "Status da API",
        "description": "Verifica o status da API e suas dependências.",
        "responses": {
          "200": {
            "description": "Status da API",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "500": {
            "description": "Erro ao verificar o status da API",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Usuario": {
      "type": "object",
      "required": ["nome", "email", "senha"],
      "properties": {
        "nome": {
          "type": "string",
          "example": "João Silva"
        },
        "email": {
          "type": "string",
          "example": "joao@email.com"
        },
        "senha": {
          "type": "string",
          "format": "password",
          "example": "senha123"
        }
      }
    },
    "UsuarioResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "João Silva"
        },
        "email": {
          "type": "string",
          "example": "joao@email.com"
        }
      }
    },
    "UsuarioUpdate": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "João Silva"
        },
        "email": {
          "type": "string",
          "example": "joao@email.com"
        },
        "senha": {
          "type": "string",
          "format": "password",
          "example": "nova_senha"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": ["email", "senha"],
      "properties": {
        "email": {
          "type": "string",
          "example": "joao@email.com"
        },
        "senha": {
          "type": "string",
          "format": "password",
          "example": "senha123"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        }
      }
    },
    "Produto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "descricao": {
          "type": "string",
          "example": "Smartphone XYZ"
        },
        "quantidade_estoque": {
          "type": "integer",
          "example": 10
        },
        "valor": {
          "type": "integer",
          "example": 129990
        },
        "categoria_id": {
          "type": "integer",
          "example": 2
        },
        "produto_imagem": {
          "type": "string",
          "example": "https://exemplo.com/imagens/smartphone.jpg"
        }
      }
    },
    "Cliente": {
      "type": "object",
      "required": ["nome", "email", "cpf"],
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Maria Santos"
        },
        "email": {
          "type": "string",
          "example": "maria@email.com"
        },
        "cpf": {
          "type": "string",
          "example": "529.982.247-25"
        },
        "cep": {
          "type": "string",
          "example": "01001-000"
        },
        "rua": {
          "type": "string",
          "example": "Praça da Sé"
        },
        "numero": {
          "type": "string",
          "example": "1"
        },
        "bairro": {
          "type": "string",
          "example": "Sé"
        },
        "cidade": {
          "type": "string",
          "example": "São Paulo"
        },
        "estado": {
          "type": "string",
          "example": "SP"
        }
      }
    },
    "ClienteUpdate": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Maria Santos"
        },
        "email": {
          "type": "string",
          "example": "maria@email.com"
        },
        "cpf": {
          "type": "string",
          "example": "529.982.247-25"
        },
        "cep": {
          "type": "string",
          "example": "01001-000"
        },
        "rua": {
          "type": "string",
          "example": "Praça da Sé"
        },
        "numero": {
          "type": "string",
          "example": "1"
        },
        "bairro": {
          "type": "string",
          "example": "Sé"
        },
        "cidade": {
          "type": "string",
          "example": "São Paulo"
        },
        "estado": {
          "type": "string",
          "example": "SP"
        }
      }
    },
    "PedidoProduto": {
      "type": "object",
      "required": ["produto_id", "quantidade_produto"],
      "properties": {
        "produto_id": {
          "type": "integer",
          "example": 1
        },
        "quantidade_produto": {
          "type": "integer",
          "example": 2
        }
      }
    },
    "PedidoCreate": {
      "type": "object",
      "required": ["cliente_id", "pedido_produtos"],
      "properties": {
        "cliente_id": {
          "type": "integer",
          "example": 1
        },
        "observacao": {
          "type": "string",
          "example": "Entrega rápida"
        },
        "pedido_produtos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoProduto"
          }
        }
      }
    },
    "Pedido": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "cliente_id": {
          "type": "integer",
          "example": 1
        },
        "observacao": {
          "type": "string",
          "example": "Entrega rápida"
        },
        "valor_total": {
          "type": "integer",
          "example": 299980
        },
        "pedido_produtos": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "pedido_id": {
                "type": "integer",
                "example": 1
              },
              "produto_id": {
                "type": "integer",
                "example": 1
              },
              "quantidade_produto": {
                "type": "integer",
                "example": 2
              },
              "valor_produto": {
                "type": "integer",
                "example": 129990
              }
            }
          }
        }
      }
    },
    "Categoria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "descricao": {
          "type": "string",
          "example": "Informática"
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "PDV API"
        },
        "version": {
          "type": "string",
          "example": "1.0.0"
        },
        "status": {
          "type": "string",
          "enum": ["online", "partial", "offline"],
          "example": "online"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-26T12:34:56.789Z"
        },
        "environment": {
          "type": "string",
          "example": "development"
        },
        "uptime": {
          "type": "string",
          "example": "3600 segundos"
        },
        "dependencies": {
          "type": "object",
          "properties": {
            "database": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["ok", "error"],
                  "example": "ok"
                },
                "message": {
                  "type": "string",
                  "example": "Conexão com o banco de dados estabelecida"
                }
              }
            },
            "storage": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["ok", "error"],
                  "example": "ok"
                },
                "message": {
                  "type": "string",
                  "example": "Client de storage configurado corretamente"
                }
              }
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Descrição do erro"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "example": "email"
              },
              "message": {
                "type": "string",
                "example": "O email deve ser um email válido"
              }
            }
          }
        }
      }
    }
  }
}
